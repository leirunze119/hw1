%this is a matlab .m file

for cnt=1:2   %两幅图片，运行两次
    %读取bmp图片
    if(cnt==1)
        in=im2double(imread('lena.bmp')).*255;
    else
        in=im2double(imread('elain1.bmp')).*255;
    end
    h0=size(in,1);  %原始图像的高
    w0=size(in,2);  %原始图像的宽
    h1=2048;    %处理后的图像的高
    w1=2048;    %处理后的图像的宽
    
    shear_hor=1.5;  %水平便宜参数为1.5
    rotate=-pi/6;   %旋转角度为顺时针30度
    
    TS=[1 shear_hor 0;0 1 0;0 0 1];     %水平偏移变换矩阵
    TR=[cos(rotate) sin(rotate) 0;-sin(rotate) cos(rotate) 0;0 0 1];    %旋转变换矩阵
    
    maxp=[h0-1 w0-1 1]*TS*TR;   %变换后图像右下角点
    TZ=[(h1-1)/maxp(1) 0 0;0 (w1-1)/maxp(2) 0;0 0 1];   %根据变换后图像右下角点的坐标选取尺度变换参数
    T=TS*TR*TZ; %变换矩阵T，三次变换按顺序依次右乘
    
    %最近邻
    out1=zeros(h1,w1);
    for i=1:h1
        for j=1:w1
            ord=[i-1 j-1 1]/T;      %求取变换后的图像对应于原始图像的坐标
            x0=round(ord(1))+1;     %选取最近邻点
            y0=round(ord(2))+1;
            if(x0>=1&&x0<=h0&&y0>=1&&y0<=w0)
                out1(i,j)=in(x0,y0);    %对原始图像范围内的点进行最近邻插值
            else
                out1(i,j)=0;    %对原始图像范围外的点保持黑色
            end
        end
    end
    
    %双线性         
    out2=zeros(h1,w1);
    for i=1:h1
        for j=1:w1
            ord=[i-1 j-1 1]/T;      %求取变换后的图像对应于原始图像的坐标
            x1=ord(1)+1;
            y1=ord(2)+1;
            if(x1<1||x1>h0||y1<1||y1>w0)
                out2(i,j)=0;    %对原始图像范围外的点保持黑色
            else
                %原图像中左上方向最近邻的点坐标
                x0=floor(x1);
                y0=floor(y1);
                %原图像中右下方向最近邻的点坐标
                if(ceil(x1)==x0||ceil(x1)>h0)
                    x2=x0;
                else
                    x2=x0+1;
                end
                if(ceil(y1)==y0||ceil(y1)>w0)
                    y2=y0;
                else
                    y2=y0+1;
                end
                %若变换后图像中对应于原图像的横纵坐标均为整数，则直接取对应点的值
                if(x2==x0&&y2==y0)
                    out2(i,j)=in(x0,y0);
                %若变换后图像中对应于原图像的一个坐标均为整数，则用原图像中的两点做线性插值
                elseif(x2==x0)
                    out2(i,j)=in(x0,y0)+(in(x0,y2)-in(x0,y0))*(y1-y0);
                elseif(y2==y0)
                    out2(i,j)=in(x0,y0)+(in(x2,y0)-in(x0,y0))*(x1-x0);
                %若变换后图像中对应于原图像的横纵坐标均不为整数，则用双线性插值
                else
                    %求解方程组v=ax+by+cxy+d
                    A=[x0 y0 x0*y0 1;x0 y0+1 x0*(y0+1) 1;x0+1 y0 (x0+1)*y0 1;x0+1 y0+1 (x0+1)*(y0+1) 1];
                    v=[in(x0,y0) in(x0,y2) in(x2,y0) in(x2,y2)]';
                    coef=A\v;
                    out2(i,j)=coef(1)*x1+coef(2)*y1+coef(3)*x1*y1+coef(4);
                end
            end
            
        end
    end

    %双三次内插         
    out3=zeros(h1,w1);
    for i=1:h1
        for j=1:w1
            ord=[i-1 j-1 1]/T;  %求取变换后的图像对应于原始图像的坐标
            x2=ord(1)+1;
            y2=ord(2)+1;
            if(x2<1||x2>h0||y2<1||y2>w0)
                out2(i,j)=0;    %对原始图像范围外的点保持黑色
            else
                %原图像中左上方向近邻的点坐标
                x1=floor(x2);
                y1=floor(y2);
                if(x1==1)
                    x0=1;
                else
                    x0=x1-1;
                end
                if(y1==1)
                    y0=1;
                else
                    y0=y1-1;
                end
                %原图像中右下方向近邻的点坐标
                if(ceil(x2)==x1||ceil(x2)>h0)
                    x3=x1;
                else
                    x3=x1+1;
                end
                if(ceil(y2)==y1||ceil(y2)>w0)
                    y3=y1;
                else
                    y3=y1+1;
                end
                if(x3==h0)
                    x4=h0;
                else
                    x4=x3+1;
                end
                if(y3==w0)
                    y4=w0;
                else
                    y4=y3+1;
                end
                %若变换后图像中对应于原图像的横纵坐标均为整数，则直接取对应点的值
                if(x3==x1&&y3==y1)
                    out3(i,j)=in(x1,y1);
                %若变换后图像中对应于原图像的一个坐标均为整数，则用原图像中的共线四点做三次插值
                elseif(x3==x1)
                    %v=ay^3+by^2+cy+d
                    A=zeros(4,4);
                    for k=1:4
                        for L=1:4
                            A(k,L)=power(y1+k-2,4-L);
                        end
                    end
                    v=[in(x1,y0) in(x1,y1) in(x1,y3) in(x1,y4)]';
                    coef=A\v;
                    out3(i,j)=coef(1)*y2^3+coef(2)*y2^2+coef(3)*y2+coef(4);
                elseif(y3==y1)
                    %v=ax^3+bx^2+cx+d
                    A=zeros(4,4);
                    for k=1:4
                        for L=1:4
                            A(k,L)=power(x1+k-2,4-L);
                        end
                    end
                    v=[in(x0,y1) in(x1,y1) in(x3,y1) in(x4,y1)]';
                    coef=A\v;
                    out3(i,j)=coef(1)*x2^3+coef(2)*x2^2+coef(3)*x2+coef(4);
                %若变换后图像中对应于原图像的横纵坐标均不为整数，则用双三次内插
                else
                    %求解方程组v=ΣΣc(i,j)*(x^i)*(y^j)
                    A=zeros(16,16);
                    for k=1:4
                        for L=1:4
                            for m=1:4
                                for n=1:4
                                    A(4*k+L-4,4*m+n-4)=power(x1+k-2,4-m)*power(y1+L-2,4-n);
                                end
                            end
                        end
                    end
                    v=[in(x0,y0) in(x0,y1) in(x0,y3) in(x0,y4) in(x1,y0) in(x1,y1) in(x1,y3) in(x1,y4) in(x3,y0) in(x3,y1) in(x3,y3) in(x3,y4) in(x4,y0) in(x4,y1) in(x4,y3) in(x4,y4)]';
                    coef=A\v;
                    for k=1:4
                        for L=1:4
                            out3(i,j)=out3(i,j)+coef(4*k+L-4)*power(x2,4-k)*power(y2,4-L);
                        end
                    end
                end
            end
        end
    end
    
    %保存结果
    if(cnt==1)
        str='lena';
    else
        str='elain';
    end
    imwrite(out1./255,strcat(str,'_affine_nearest.bmp'));
    imwrite(out2./255,strcat(str,'_affine_bilinear.bmp'));
    imwrite(out3./255,strcat(str,'_affine_bicubic.bmp'));
end
